public class fundamentalsPrac {
    public static void main (String[] args) {
        // for (int x = 0; x < 10; x++) {
        //     System.out.println(x);
        // }
        // System.out.println();
        // for (int x = 0; x<10; ++x) {
        //     System.out.println(x);
        // }

        // int i = 1;
        // switch(i) {
        //     case 1: System.out.println("One player is playing the game.");
        //     break;
        //     case 2: System.out.println("Two players are playing the game.");
        //     break;
        //     case 3: System.out.println("Three Players are playing the game.");
        //     break;
        //     default: System.out.println("You did not enter a valid value.");
        // }

        // System.out.print('A' + 'B');
        /* 
        A and B are in single quotes. They are character constants, so they won't concatenate.
        The Unicode of 'A' is 65 and 'B' is 66. They add up to give 131 when executed.
        **/

        // System.out.print("A" + "B" + 'A');
        // If you try to concatenate any type of data like integer, character, float with the String, the result will be a String.
        
        // System.out.print(20 + 1.34f + "A" + "B");
        // 20 and 1.34 will be added and concatenated with "A" and "B".
        
        // char[] str = {'S', 'A', 'N', 'T', 'O', 'S', 'H'};
        // System.out.print(str.toString());
        /* 
        str is a character array, if you try to print str.toString() It will not be converted into 
        String because
        **/ 
        
        // System.out.print("Hello");
        // System.out.println("Guys!");
        // System.out.print("I'm Santosh");

        /*
        System.out.print() does not print a new line after printing String, 
        while System.out.println() prints a new line after printing String
        Hence, the output will be HelloGuys! and then the new line.
        **/

        // char a = 0x41;
        // char b = 0x42;
        // System.out.println(a);
        // System.out.println(b);
        // System.out.println(a + "" + b + "");
        // System.out.println("-");
        // System.out.println(a + b);

        /*
        a + "" and b + "" will be converted into String, .toString() or +"" after variable or value
        converts value into the String and
        a + b will be added because they are not converted into String. Hence, output will be AB-131.
        **/

        // If the class is public then the file name must be same as the name of the Class name.
        // Otherwise Compilation error is occured.

        // Byte code in java is an intermediate code generated by the java compiler for the 
        // Java Virtual Machine.

        /* 
        Garbage collection is a thread to free the memory of de-referenced objects automatically.
        **/

        // Java does not support the const keyword, instead of const, final keyword is used.

        // System.out.println((byte)0xff);
        // 0xff is the maximum value of byte. and in decimal the maximum value of the byte is -1.
        // System.out.println((char)(byte)0xff);
        // System.out.println((int)(char)(byte)0xff);

        // boolean isAdult = false;
        // System.out.print(isAdult);

        
    }
}
